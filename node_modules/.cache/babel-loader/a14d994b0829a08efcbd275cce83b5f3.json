{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Shamal123\\\\Desktop\\\\elyah\\\\elyah\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';export function useKey(key){// Keep track of key state\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),pressed=_useState2[0],setPressed=_useState2[1];// Does an event match the key we're watching?\nvar match=function match(event){return key.toLowerCase()==event.key.toLowerCase();};// Event handlers\nvar onDown=function onDown(event){if(match(event))setPressed(true);};var onUp=function onUp(event){if(match(event))setPressed(false);};// Bind and unbind events\nuseEffect(function(){window.addEventListener(\"keydown\",onDown);window.addEventListener(\"keyup\",onUp);return function(){window.removeEventListener(\"keydown\",onDown);window.removeEventListener(\"keyup\",onUp);};},[key]);return pressed;}export default useKey;","map":{"version":3,"sources":["C:/Users/Shamal123/desktop/elyah/elyah/src/components/functions/keyEvents.js"],"names":["React","useState","useEffect","useKey","key","pressed","setPressed","match","event","toLowerCase","onDown","onUp","window","addEventListener","removeEventListener"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,MAAO,SAASC,CAAAA,MAAT,CAAgBC,GAAhB,CAAqB,CACxB;AADwB,cAEMH,QAAQ,CAAC,KAAD,CAFd,wCAEjBI,OAFiB,eAERC,UAFQ,eAIxB;AACA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAAAC,KAAK,QAAIJ,CAAAA,GAAG,CAACK,WAAJ,IAAqBD,KAAK,CAACJ,GAAN,CAAUK,WAAV,EAAzB,EAAnB,CAEA;AACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAF,KAAK,CAAI,CACpB,GAAID,KAAK,CAACC,KAAD,CAAT,CAAkBF,UAAU,CAAC,IAAD,CAAV,CACrB,CAFD,CAIA,GAAMK,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAAAH,KAAK,CAAI,CAClB,GAAID,KAAK,CAACC,KAAD,CAAT,CAAkBF,UAAU,CAAC,KAAD,CAAV,CACrB,CAFD,CAIA;AACAJ,SAAS,CAAC,UAAM,CACZU,MAAM,CAACC,gBAAP,CAAwB,SAAxB,CAAmCH,MAAnC,EACAE,MAAM,CAACC,gBAAP,CAAwB,OAAxB,CAAiCF,IAAjC,EACA,MAAO,WAAM,CACTC,MAAM,CAACE,mBAAP,CAA2B,SAA3B,CAAsCJ,MAAtC,EACAE,MAAM,CAACE,mBAAP,CAA2B,OAA3B,CAAoCH,IAApC,EACH,CAHD,CAIH,CAPQ,CAON,CAACP,GAAD,CAPM,CAAT,CASA,MAAOC,CAAAA,OAAP,CACH,CAED,cAAeF,CAAAA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport function useKey(key) {\r\n    // Keep track of key state\r\n    const [pressed, setPressed] = useState(false)\r\n\r\n    // Does an event match the key we're watching?\r\n    const match = event => key.toLowerCase() == event.key.toLowerCase()\r\n\r\n    // Event handlers\r\n    const onDown = event => {\r\n        if (match(event)) setPressed(true)\r\n    }\r\n\r\n    const onUp = event => {\r\n        if (match(event)) setPressed(false)\r\n    }\r\n\r\n    // Bind and unbind events\r\n    useEffect(() => {\r\n        window.addEventListener(\"keydown\", onDown)\r\n        window.addEventListener(\"keyup\", onUp)\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", onDown)\r\n            window.removeEventListener(\"keyup\", onUp)\r\n        }\r\n    }, [key])\r\n\r\n    return pressed\r\n}\r\n\r\nexport default useKey;\r\n"]},"metadata":{},"sourceType":"module"}